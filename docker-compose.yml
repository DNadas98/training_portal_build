services:
  psql:
    container_name: postgres
    image: postgres
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
      - ./psql/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      backend_network: {}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    image: dnadas98/priv:training_portal_backend
    env_file:
      - ./.env
    depends_on:
      - psql
    networks:
      backend_network: {}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    depends_on:
      - backend
    volumes:
      - "./nging/logs:/var/log/nginx"
    networks:
      backend_network: {}
    ports:
      - "80:80"
      - "443:443"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres-exporter:
    image: bitnami/postgres-exporter
    environment:
      DATA_SOURCE_NAME: ${PROMETHEUS_POSTGRES_EXPORTER_DB_CONNECTION_STRING}
    ports:
      - "127.0.0.1:9187:9187"
    networks:
      backend_network: {}
    depends_on:
      - psql
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 100M

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    ports:
      - "127.0.0.1:9113:9113"
    command: ["--nginx.scrape-uri=http://nginx/nginx_status"]
    networks:
      backend_network:
        ipv4_address: 172.28.1.3
    depends_on:
      - nginx
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 100M

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "127.0.0.1:9090:9090"
    networks:
      backend_network: {}
    depends_on:
      - postgres-exporter
      - nginx-exporter
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 100M

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    depends_on:
      - prometheus
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      backend_network: {}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 100M

networks:
  backend_network:
    driver: bridge
    ipam:
     config:
       - subnet: 172.28.0.0/16

volumes:
  db:
  prometheus_data:
  grafana_data:

